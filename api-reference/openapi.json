{
  "openapi": "3.1.0",
  "info": {
    "title": "AIORNOT API",
    "summary": "\n        Welcome to AI or Not`s documentation, the developer guide to discerning digital authenticity!\n        ",
    "termsOfService": "https://aiornot.com/terms-of-service",
    "contact": {
      "name": "AIORNOT",
      "url": "https://aiornot.com/",
      "email": "support@aiornot.com"
    },
    "version": "5.0.2"
  },
  "servers": [
    {
      "url": "https://prod.ai-or-not.com/v1",
      "description": "Production environment"
    }
  ],
  "paths": {
    "/test/dummy": {
      "post": {
        "tags": [
          "Test"
        ],
        "summary": "Upload a dummy object",
        "description": "Accepts a single binary file in the **object** field.\n\nMintlify will generate Python code such as:\n```python\nfiles = {\"object\": open(\"path/to/file\", \"rb\")}\nresponse = requests.post(\"https://your.api/test/dummy\", files=files)\n```\n",
        "operationId": "uploadDummyObject",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "format": "binary",
                    "title": "Object",
                    "description": "Binary file to upload."
                  }
                },
                "required": [
                  "object"
                ]
              },
              "encoding": {
                "object": {
                  "contentType": "application/octet-stream"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "filename": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "required": [
                    "id",
                    "filename",
                    "size"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/reports/image": {
      "post": {
        "tags": [
          "Reports by Modality"
        ],
        "summary": "Image",
        "description": "Analyze an **image** to determine if it was generated by AI.\n\nThis endpoint not only returns overall confidence scores, it also gives classification labels and confidence scores for particular generators (e.g. Midjourney, DALL-E, etc.). Additionally, it returns often-useful facets for image quality and NSFW detection.",
        "operationId": "get_report_reports_image_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "format": "binary",
                    "title": "Object",
                    "description": "The image file to analyze.\n - Supported formats: jpg, jpeg, png, webp, heic, heif, tiff.\n- Max file size: 10MB"
                  }
                },
                "required": [
                  "object"
                ],
                "title": "BinaryRequest"
              },
              "encoding": {
                "object": {
                  "contentType": "image/*"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/reports/voice": {
      "post": {
        "tags": [
          "Reports by Modality"
        ],
        "summary": "Audio - Voice",
        "description": "Analyze an **audio file** to determine if it was generated by an AI *voice* model.\n\nThis endpoint is only appropriate when you are looking for ai versus human generated voices. It is not appropriate for music (including singing).\n\n**Warning: This endpoint can take up two minutes for long duration audio files or if our backend is spinning up additional processing nodes. Please set a two minute timeout in your client.**",
        "operationId": "get_voice_report_reports_voice_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_voice_report_reports_voice_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/reports/music": {
      "post": {
        "tags": [
          "Reports by Modality"
        ],
        "summary": "Audio - Music",
        "description": "Analyze an **audio file** to determine if it was generated by an AI *music* model.\n\nThis endpoint is only appropriate when you are looking for ai versus human generated music. Music means both singing (vocals) and instrumentals.\n\n**Warning: This endpoint can take up two minutes for long duration audio files or if our backend is spinning up additional processing nodes. Please set a two minute timeout in your client.**",
        "operationId": "get_music_report_reports_music_poalysis including confidence scores and model-specific insights. Supports common audio formats like MP3, WAVst",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "title": "File",
                    "description": "The audio file to analyze. Must be a valid audio file."
                  }
                },
                "required": [
                  "file"
                ]
              },
              "encoding": {
                "file": {
                  "contentType": "audio/*"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/system/live": {
      "get": {
        "tags": [
          "SYSTEM MANAGEMENT"
        ],
        "summary": "Is Live",
        "description": "Check if the API is live.\n\nThis is useful for diagnosing issues with your integration. Is there a bug on your side, or are we simply down? You should not hit this endpoint very frequently as our system may flag it as abuse.\n\nPlease see also [our status page](https://status.aiornot.com/).",
        "operationId": "is_live_system_live_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveStatus"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIONGenerateVerdict": {
        "type": "string",
        "enum": [
          "ai",
          "human"
        ],
        "title": "AIONGenerateVerdict",
        "description": "Generate verdict."
      },
      "AIONGeneratorScheme": {
        "properties": {
          "midjourney": {
            "$ref": "#/components/schemas/AIONPredictionBase",
            "example": 0.9
          },
          "dall_e": {
            "$ref": "#/components/schemas/AIONPredictionBase",
            "example": 0.05
          },
          "stable_diffusion": {
            "$ref": "#/components/schemas/AIONPredictionBase",
            "example": 0.04
          },
          "this_person_does_not_exist": {
            "$ref": "#/components/schemas/AIONPredictionBase",
            "example": 0.01
          },
          "adobe_firefly": {
            "$ref": "#/components/schemas/AIONPredictionBase",
            "example": 0
          },
          "flux": {
            "$ref": "#/components/schemas/AIONPredictionBase",
            "example": 0
          },
          "four_o": {
            "$ref": "#/components/schemas/AIONPredictionBase",
            "example": 0
          }
        },
        "type": "object",
        "required": [
          "midjourney",
          "dall_e",
          "stable_diffusion",
          "this_person_does_not_exist",
          "adobe_firefly",
          "flux",
          "four_o"
        ],
        "title": "AIONGeneratorScheme",
        "description": "A map of generator names to their prediction base.Please note that\n- This list is not exhaustive. We have trained on more generators than appear here.\n- We may add new generators at any time, so please make sure your integration allows for field addition without error."
      },
      "AIONPredictionBase": {
        "properties": {
          "is_detected": {
            "type": "boolean",
            "title": "Is Detected",
            "description": "Indicates whether the particular class was detected."
          },
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "minimum": 0,
            "maximum": 1,
            "example": 0.95,
            "description": "Confidence score for the particular class."
          }
        },
        "type": "object",
        "required": [
          "is_detected",
          "confidence"
        ],
        "title": "AIONPredictionBase"
      },
      "AIONPredictionType2": {
        "properties": {
          "is_detected": {
            "type": "boolean",
            "title": "Is Detected"
          }
        },
        "type": "object",
        "required": [
          "is_detected"
        ],
        "title": "AIONPredictionType2"
      },
      "AIONReportScheme": {
        "properties": {
          "verdict": {
            "title": "Verdict",
            "description": "The predicted class of the uploaded image.\n\nThis is the most important field in the response. This field is more reliable than directly using the confidence score yourself, as the confidence score may drift over time for new models.",
            "enum": [
              "ai",
              "human",
              "unknown"
            ]
          },
          "ai": {
            "$ref": "#/components/schemas/AIONPredictionBase",
            "example": {
              "is_detected": true,
              "confidence": 0.95
            }
          },
          "human": {
            "$ref": "#/components/schemas/AIONPredictionBase",
            "example": {
              "is_detected": false,
              "confidence": 0.05
            }
          },
          "generator": {
            "$ref": "#/components/schemas/AIONGeneratorScheme"
          }
        },
        "type": "object",
        "required": [
          "verdict",
          "ai",
          "human",
          "generator"
        ],
        "title": "AIONReportScheme"
      },
      "AudioReportResponse": {
        "properties": {
          "report": {
            "$ref": "#/components/schemas/ShareReport"
          }
        },
        "type": "object",
        "required": [
          "report"
        ],
        "title": "AudioReportResponse"
      },
      "BboxScheme": {
        "properties": {
          "x": {
            "type": "number",
            "title": "X"
          },
          "y": {
            "type": "number",
            "title": "Y"
          },
          "w": {
            "type": "number",
            "title": "W"
          },
          "h": {
            "type": "number",
            "title": "H"
          }
        },
        "type": "object",
        "required": [
          "x",
          "y",
          "w",
          "h"
        ],
        "title": "BboxScheme"
      },
      "Body_get_music_report_reports_music_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_get_music_report_reports_music_post"
      },
      "Body_get_voice_report_reports_audio_post": {
        "properties": {
          "object": {
            "type": "string",
            "format": "binary",
            "title": "Object"
          }
        },
        "type": "object",
        "required": [
          "object"
        ],
        "title": "Body_get_voice_report_reports_audio_post"
      },
      "Body_get_voice_report_reports_voice_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The audio file to analyze. Must be a valid audio file."
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_get_voice_report_reports_voice_post"
      },
      "DeepFakeVerdict": {
        "type": "string",
        "enum": [
          "deepfake",
          "real"
        ],
        "title": "DeepFakeVerdict"
      },
      "FacetsScheme": {
        "properties": {
          "quality": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QualityReportScheme"
              },
              {
                "type": "null"
              }
            ]
          },
          "nsfw": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NSFWReportScheme"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nsfw"
          }
        },
        "type": "object",
        "required": [
          "quality",
          "nsfw"
        ],
        "title": "FacetsScheme"
      },
      "ImageDeepFakeReportResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "max_confidence": {
            "type": "number",
            "title": "Max Confidence",
            "description": "Field that indicates the maximum confidence of the prediction."
          },
          "is_detected": {
            "type": "boolean",
            "title": "Is Detected",
            "description": "Field that indicates whether the aion_image was modified with AI or not."
          },
          "rois": {
            "items": {
              "$ref": "#/components/schemas/RoiReportScheme"
            },
            "type": "array",
            "title": "Rois",
            "description": "Field that contains the list of regions of interest."
          }
        },
        "type": "object",
        "required": [
          "id",
          "max_confidence",
          "is_detected",
          "rois"
        ],
        "title": "ImageDeepFakeReportResponse"
      },
      "ImageReportResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier associated with the request."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Date and time of request processing."
          },
          "report": {
            "$ref": "#/components/schemas/AIONReportScheme",
            "title": "Report"
          },
          "facets": {
            "$ref": "#/components/schemas/FacetsScheme"
          }
        },
        "type": "object",
        "required": [
          "id",
          "report",
          "facets"
        ],
        "title": "ImageReportResponse"
      },
      "LiveStatus": {
        "properties": {
          "is_live": {
            "type": "boolean",
            "title": "Is Live",
            "default": true
          }
        },
        "type": "object",
        "title": "LiveStatus",
        "description": "Indicates that API is live."
      },
      "MusicReportResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "report": {
            "$ref": "#/components/schemas/ShareMusicReport"
          }
        },
        "type": "object",
        "required": [
          "id",
          "report"
        ],
        "title": "MusicReportResponse"
      },
      "NSFWReportScheme": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0.0"
          },
          "is_detected": {
            "type": "boolean",
            "title": "Is Detected",
            "description": "True if NSFW content found in the image. Please note that for us, the mere presence of a child is enough to trigger this flag. We offer a more granular NSFW report for clients who need it. Please contact us if this describes you."
          }
        },
        "type": "object",
        "required": [
          "is_detected"
        ],
        "title": "NSFWReportScheme"
      },
      "QualityReportScheme": {
        "properties": {
          "is_detected": {
            "type": "boolean",
            "title": "Is Detected",
            "description": "Indicates whether the image is of low quality. **Low quality is not a asthetic judgement.** It merely means that there are artifacts present that indicate things like excessive compression or blurring which degrades other classifiers."
          }
        },
        "type": "object",
        "required": [
          "is_detected"
        ],
        "title": "QualityReportScheme"
      },
      "RoiReportScheme": {
        "properties": {
          "bbox": {
            "$ref": "#/components/schemas/BboxScheme"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          },
          "verdict": {
            "$ref": "#/components/schemas/DeepFakeVerdict"
          },
          "is_detected": {
            "type": "boolean",
            "title": "Is Detected"
          }
        },
        "type": "object",
        "required": [
          "bbox",
          "confidence",
          "verdict",
          "is_detected"
        ],
        "title": "RoiReportScheme"
      },
      "ShareMusicReport": {
        "properties": {
          "verdict": {
            "$ref": "#/components/schemas/AIONGenerateVerdict"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "description": "Confidence score for whether this audio file is ai-generated.",
            "minimum": 0,
            "maximum": 1,
            "example": 0.95
          },
          "duration": {
            "type": "integer",
            "title": "Duration",
            "description": "Duration of the audio file in seconds.",
            "example": 120
          },
          "total_bytes": {
            "type": "integer",
            "title": "Total Bytes",
            "description": "Total size of the audio file in bytes.",
            "example": 362594
          },
          "md5": {
            "type": "string",
            "title": "MD5",
            "description": "MD5 hash of the uploaded audio file.",
            "example": "db36d923800f6ca6b7f87cff8a19d1d1"
          }
        },
        "type": "object",
        "required": [
          "verdict",
          "confidence",
          "duration",
          "total_bytes",
          "md5"
        ],
        "title": "ShareMusicReport"
      },
      "ShareReport": {
        "properties": {
          "verdict": {
            "$ref": "#/components/schemas/AIONGenerateVerdict"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": [
          "verdict",
          "confidence"
        ],
        "title": "ShareReport"
      },
      "ShareVoiceReport": {
        "properties": {
          "verdict": {
            "$ref": "#/components/schemas/AIONGenerateVerdict"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "minimum": 0,
            "maximum": 1,
            "example": 0.95
          },
          "duration": {
            "type": "integer",
            "title": "Duration",
            "example": 120
          },
          "total_bytes": {
            "type": "integer",
            "title": "Total Bytes",
            "example": 362594
          },
          "md5": {
            "type": "string",
            "title": "Md5",
            "example": "db36d923800f6ca6b7f87cff8a19d1d1"
          }
        },
        "type": "object",
        "required": [
          "verdict",
          "confidence",
          "duration",
          "total_bytes",
          "md5"
        ],
        "title": "ShareVoiceReport"
      },
      "VoiceReportResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "report": {
            "$ref": "#/components/schemas/ShareVoiceReport"
          }
        },
        "type": "object",
        "required": [
          "id",
          "report"
        ],
        "title": "VoiceReportResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "description": "Your [API key](https://www.aiornot.com/dashboard/api) as the `Bearer` token in the `Authorization` header."
      }
    }
  }
}
